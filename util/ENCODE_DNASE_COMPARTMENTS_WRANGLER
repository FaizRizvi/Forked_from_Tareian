cd /Users/caz3so/Dropbox/thesis/data/201808012_ENCODE_DNASE_FINAL/BED

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import glob

filenames_hg19 = glob.glob("*_hg19.bed_sort_subs.bed")
filenames_masked = glob.glob("*_masked.bed_sort_subs.bed")

list_of_hg19 = [pd.read_csv(filename, header=None, sep="\t") for filename in filenames_hg19]
list_of_masked = [pd.read_csv(filename, header=None, sep="\t") for filename in filenames_masked]

zippy1 = zip(list_of_hg19, filenames_hg19)
zippy2 = zip(list_of_masked, filenames_masked)

for dataframe, filename in zippy1:
    dataframe['filename'] = filename.replace("_hg19.bed_sort_subs.bed", "")
    dataframe['genome'] = "hg19"
    
for dataframe, filename in zippy2:
    dataframe['filename'] = filename.replace("_masked.bed_sort_subs.bed", "")
    dataframe['genome'] = "masked"

result_hg19 = pd.concat(list_of_hg19)
result_masked = pd.concat(list_of_masked)

result_combined = pd.concat([result_hg19, result_masked])
results_NA = result_combined.dropna()

result_combined.columns = ["Chromosome", "Start", "Stop", "Subcompartment", "some", "random", "start", "stop", "color", "Name", "Genome"]
result_combined["Length"] = result_combined["Stop"] - result_combined["Start"]

group_counts = result_combined.groupby(["Genome","Name","Subcompartment"])
group_counts_size = group_counts.size()
sub_frame = group_counts_size.to_frame()
sub_frame = sub_frame.reset_index()

union_frame = pd.read_csv("UNION_compartments.bed", header=None, sep="\t")
union_frame["Genome"] = "UNION"
union_frame.columns = ["Chromosome", "Start", "Stop", "Subcompartment", "some", "random", "start", "stop", "color", "Genome"]
union_counts = union_frame.groupby(["Genome", "Subcompartment"]).size()
union_count_frame = union_counts.reset_index()
union_count_frame.columns = ["Genome", "Subcompartment", "Counts"]
union_count_frame.to_csv("union.csv")
flatui = ["#ef8a62", "#ef8a62", "#67a9cf", "#67a9cf", "#67a9cf", "#67a9cf"]
colors = ["windows blue", "amber", "greyish", "faded green", "dusty purple"]
colorful = sns.xkcd_palette(colors)
grade = sns.light_palette("green")
diverging = sns.diverging_palette(10, 220, sep=80, n=7)
sns.palplot(sns.color_palette(flatui))

t = sns.violinplot(x="Subcompartment", y = "Length", hue="Genome", data=result_combined)
plt.yscale("log")

y = sns.countplot(x="Subcompartment", data=union_frame, order=["A1", "A2", "B1", "B2", "B3", "B4"], palette=flatui)
for p in y.patches:
        y.annotate('{:}'.format(p.get_height()), (p.get_x(), p.get_height()))

sub_frame.columns = ["Genome", "Name", "Subcompartment", "Counts"]
ax = sns.boxplot(x="Domain", y="Counts", data=pickle2)

sns.barplot(x="Domain", y = "Counts", data=pickle2)
for item in y.get_xticklabels():
    item.set_rotation(90)

subcounts = group_counts.to_frame()
pickle2 = pd.read_csv("union.csv")
pickle = pd.read_csv("test.csv", header=None)
pickle.columns = ["Genome", "Name", "Subcompartment", "Count", "Domain"]
 g = sns.catplot(x="Subcompartment", y="Counts",
...                 col="Genome", data=exercise,
...                 height=5, aspect=.8)
